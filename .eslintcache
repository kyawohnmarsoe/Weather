[{"/Applications/MAMP/htdocs/React Projects/weather/src/index.js":"1","/Applications/MAMP/htdocs/React Projects/weather/src/App.js":"2","/Applications/MAMP/htdocs/React Projects/weather/src/serviceWorker.js":"3","/Applications/MAMP/htdocs/React Projects/weather/src/app/store.js":"4","/Applications/MAMP/htdocs/React Projects/weather/src/features/weather/Weather.js":"5","/Applications/MAMP/htdocs/React Projects/weather/src/features/weather/weatherSlice.js":"6","/Applications/MAMP/htdocs/React Projects/weather/src/features/counter/counterSlice.js":"7","/Applications/MAMP/htdocs/React Projects/weather/src/api.js":"8"},{"size":644,"mtime":1607186876000,"results":"9","hashOfConfig":"10"},{"size":237,"mtime":1621110974254,"results":"11","hashOfConfig":"10"},{"size":5141,"mtime":1607186876000,"results":"12","hashOfConfig":"10"},{"size":396,"mtime":1607186876000,"results":"13","hashOfConfig":"10"},{"size":4448,"mtime":1607186876000,"results":"14","hashOfConfig":"10"},{"size":2221,"mtime":1607186876000,"results":"15","hashOfConfig":"10"},{"size":1649,"mtime":1607186876000,"results":"16","hashOfConfig":"10"},{"size":485,"mtime":1607186876000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"15aefqx",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"/Applications/MAMP/htdocs/React Projects/weather/src/index.js",[],["38","39"],"/Applications/MAMP/htdocs/React Projects/weather/src/App.js",[],"/Applications/MAMP/htdocs/React Projects/weather/src/serviceWorker.js",[],"/Applications/MAMP/htdocs/React Projects/weather/src/app/store.js",[],"/Applications/MAMP/htdocs/React Projects/weather/src/features/weather/Weather.js",["40"],"import React,{useState, useEffect} from 'react'\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Axios from 'axios'\nimport {\n    changeCity,\n    CurrentWeatherData,\n    CurrentWeatherError,\n    ForecastWeatherData,\n    ForecastWeatherError\n} from './weatherSlice'\nimport styles from \"./Weather.module.css\"\nimport moment from 'moment'\n\n\nfunction Weather() {\n    const currentCity = useSelector(state => state.weather.currentCity)\n    const currentData = useSelector(state => state.weather.currentData)\n    const forecastData = useSelector(state => state.weather.forecastData)\n    var newForecastDataDaily\n    if(forecastData !== null){\n        const forecastDataDaily = forecastData.daily;\n         newForecastDataDaily = forecastDataDaily.slice(1, 6)\n    }\n    const error = useSelector(state => state.weather.error)\n    const dispatch = useDispatch()\n    const API_KEY = \"567fb009055f8d8fddf69948130c088f\"\n    // Current \n    const getCurrentWeather = (city) =>{\n        Axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`)\n        \n        .then(response=>{\n            dispatch(CurrentWeatherData(response.data))\n            getForecastWeather(response.data.coord.lat,response.data.coord.lon)\n        })\n        .catch(error=>{\n            dispatch(CurrentWeatherError(\"City Not Found!\"))\n        })\n    }\n     // Forecast \n    const getForecastWeather = (lat,lon) =>{\n        Axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&exclude=hourly,current&appid=${API_KEY}`)\n        \n        .then(response=>{\n            // console.log(response.data)\n            dispatch(ForecastWeatherData(response.data))\n        })\n        .catch(error=>{\n            // console.log(error.message)\n            dispatch(ForecastWeatherError(\"City Not Found!\"))\n        })\n    }\n    useEffect(()=>{\n        getCurrentWeather(currentCity)\n    },[currentCity])\n\n    const [newCity,setNewCity] = useState('Singapore')\n   \n    return (\n      \n        <div >\n            <h1>Open Weather</h1>\n        \n                <input type=\"text\"\n                value={newCity}\n                onChange={e=>setNewCity(e.target.value)}\n                />\n                <input type=\"submit\" \n                value=\"Search\"\n                onClick= { () => dispatch(changeCity(newCity)) } />\n         \n            {\n                error && <h2>{error}</h2>\n            }\n\n            {\n                currentData &&\n                <div className={styles.weatherBox}>\n                    <span className={styles.cityname}>{currentCity}</span>\n                    <div className={styles.row}>\n                        <div>\n                            <img src={`http://openweathermap.org/img/wn/${currentData.weather[0].icon}.png`} alt=\"Weather Icon\" className={styles.icon}/>\n                            <span className={styles.description}>{currentData.weather[0].description}</span>\n                        </div>\n                        \n                        <span className={styles.temperature}>{currentData.main.temp} °C</span>\n                        <div className={styles.windBox}>\n                            <span>Wind:{currentData.wind.speed} m/s</span> \n                            <span>Sunrise: {moment(currentData.sys.sunrise * 1000).format('LT')} </span> \n                            <span>Sunset:{moment(currentData.sys.sunset * 1000).format('LT')} </span> \n                        </div>\n                    </div>\n                   \n                        {\n                            forecastData &&\n                            <div className={styles.row}>\n                            {\n                                    newForecastDataDaily.map((data,index) => (\n                                    <div key={index}>\n                                        <span>{moment(data.dt * 1000).format('dddd')}</span>\n                                        <img src={`http://openweathermap.org/img/wn/${data.weather[0].icon}.png`} alt=\"Weather Icon\"  className={styles.icon}/>\n                                        <span >{data.temp.day} °C</span>\n                                    </div>\n                                ) )\n                            }\n                            </div>\n                        }\n                        \n                   \n                </div>\n            }\n        </div>\n    )\n}\n\nexport default Weather\n","/Applications/MAMP/htdocs/React Projects/weather/src/features/weather/weatherSlice.js",[],"/Applications/MAMP/htdocs/React Projects/weather/src/features/counter/counterSlice.js",[],"/Applications/MAMP/htdocs/React Projects/weather/src/api.js",["41"],"import axios from \"axios\";\n\nconst API_KEY = \"567fb009055f8d8fddf69948130c088f\";\n\nexport default {\n    fetchCurrentWeather: ({ query }) =>\n        axios.get(\n            `https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${API_KEY}`\n        ),\n    fetchWeatherForecast: ({ lat, lon }) =>\n        axios.get(\n            `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&exclude=hourly,current&appid=${API_KEY}`\n        ),\n};\n",["42","43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":54,"column":7,"nodeType":"50","endLine":54,"endColumn":20,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":5,"column":1,"nodeType":"54","endLine":14,"endColumn":3},{"ruleId":"44","replacedBy":"55"},{"ruleId":"46","replacedBy":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentWeather'. Either include it or remove the dependency array.","ArrayExpression",["59"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["57"],["58"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [currentCity, getCurrentWeather]",{"range":"62","text":"63"},[1932,1945],"[currentCity, getCurrentWeather]"]