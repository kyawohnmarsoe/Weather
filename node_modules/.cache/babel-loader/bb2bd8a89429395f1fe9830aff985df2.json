{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport weatherAPI from \"../../api\";\nconst sliceName = \"weather\";\nexport const fetchCurrentWeather = createAsyncThunk(`${sliceName}/fetchCurrentWeather`, ({\n  query\n}) => weatherAPI.fetchCurrentWeather({\n  query\n}));\nexport const fetchWeatherForecast = createAsyncThunk(`${sliceName}/fetchWeatherForecast`, ({\n  lat,\n  lon\n}) => weatherAPI.fetchWeatherForecast({\n  lat,\n  lon\n}));\nexport const weatherSlice = createSlice({\n  name: sliceName,\n  initialState: {\n    current: null,\n    loading: true,\n    error: null,\n    currentCity: 1\n  },\n  reducers: {\n    changeCity: state => {}\n  },\n  extraReducers: {\n    [fetchCurrentWeather.pending]: (state, {\n      payload,\n      meta\n    }) => {\n      state.loading = true;\n    },\n    [fetchCurrentWeather.fulfilled]: (state, {\n      payload,\n      meta\n    }) => {\n      state.loading = false;\n      state.current = payload.data;\n    },\n    [fetchCurrentWeather.rejected]: (state, {\n      error,\n      meta\n    }) => {\n      state.loading = false;\n      state.error = error;\n    }\n  }\n});\nexport default weatherSlice.reducer;","map":{"version":3,"sources":["/Users/kyawohnmarsoe/Downloads/weather-widget/src/features/weather/weatherSlice.js"],"names":["createSlice","createAsyncThunk","weatherAPI","sliceName","fetchCurrentWeather","query","fetchWeatherForecast","lat","lon","weatherSlice","name","initialState","current","loading","error","currentCity","reducers","changeCity","state","extraReducers","pending","payload","meta","fulfilled","data","rejected","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,OAAOC,UAAP,MAAuB,WAAvB;AAEA,MAAMC,SAAS,GAAG,SAAlB;AAEA,OAAO,MAAMC,mBAAmB,GAAGH,gBAAgB,CAC9C,GAAEE,SAAU,sBADkC,EAE/C,CAAC;AAAEE,EAAAA;AAAF,CAAD,KAAeH,UAAU,CAACE,mBAAX,CAA+B;AAAEC,EAAAA;AAAF,CAA/B,CAFgC,CAA5C;AAKP,OAAO,MAAMC,oBAAoB,GAAGL,gBAAgB,CAC/C,GAAEE,SAAU,uBADmC,EAEhD,CAAC;AAAEI,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,KAAkBN,UAAU,CAACI,oBAAX,CAAgC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAhC,CAF8B,CAA7C;AAKP,OAAO,MAAMC,YAAY,GAAGT,WAAW,CAAC;AACpCU,EAAAA,IAAI,EAAEP,SAD8B;AAEpCQ,EAAAA,YAAY,EAAE;AACVC,IAAAA,OAAO,EAAE,IADC;AAEVC,IAAAA,OAAO,EAAE,IAFC;AAGVC,IAAAA,KAAK,EAAE,IAHG;AAIVC,IAAAA,WAAW,EAAC;AAJF,GAFsB;AAQpCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,EAAGC,KAAD,IAAW,CAEtB;AAHK,GAR0B;AAapCC,EAAAA,aAAa,EAAE;AACX,KAACf,mBAAmB,CAACgB,OAArB,GAA+B,CAACF,KAAD,EAAQ;AAAEG,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAR,KAA8B;AACzDJ,MAAAA,KAAK,CAACL,OAAN,GAAgB,IAAhB;AACH,KAHU;AAIX,KAACT,mBAAmB,CAACmB,SAArB,GAAiC,CAACL,KAAD,EAAQ;AAAEG,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAR,KAA8B;AAC3DJ,MAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACAK,MAAAA,KAAK,CAACN,OAAN,GAAgBS,OAAO,CAACG,IAAxB;AACH,KAPU;AAQX,KAACpB,mBAAmB,CAACqB,QAArB,GAAgC,CAACP,KAAD,EAAQ;AAAEJ,MAAAA,KAAF;AAASQ,MAAAA;AAAT,KAAR,KAA4B;AACxDJ,MAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACAK,MAAAA,KAAK,CAACJ,KAAN,GAAcA,KAAd;AACH;AAXU;AAbqB,CAAD,CAAhC;AA4BP,eAAeL,YAAY,CAACiB,OAA5B","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nimport weatherAPI from \"../../api\";\n\nconst sliceName = \"weather\";\n\nexport const fetchCurrentWeather = createAsyncThunk(\n    `${sliceName}/fetchCurrentWeather`,\n    ({ query }) => weatherAPI.fetchCurrentWeather({ query })\n);\n\nexport const fetchWeatherForecast = createAsyncThunk(\n    `${sliceName}/fetchWeatherForecast`,\n    ({ lat, lon }) => weatherAPI.fetchWeatherForecast({ lat, lon })\n);\n\nexport const weatherSlice = createSlice({\n    name: sliceName,\n    initialState: {\n        current: null,\n        loading: true,\n        error: null,\n        currentCity:1\n    },\n    reducers: {\n        changeCity: (state) => {\n\n        }\n    },\n    extraReducers: {\n        [fetchCurrentWeather.pending]: (state, { payload, meta }) => {\n            state.loading = true;\n        },\n        [fetchCurrentWeather.fulfilled]: (state, { payload, meta }) => {\n            state.loading = false;\n            state.current = payload.data;\n        },\n        [fetchCurrentWeather.rejected]: (state, { error, meta }) => {\n            state.loading = false;\n            state.error = error;\n        },\n    },\n});\n\nexport default weatherSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}