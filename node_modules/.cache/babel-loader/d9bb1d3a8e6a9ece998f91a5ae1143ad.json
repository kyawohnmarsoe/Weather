{"ast":null,"code":"var _jsxFileName = \"/Users/kyawohnmarsoe/Downloads/weather-widget/src/features/weather/Weather.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCurrentWeather } from './weatherActions';\n\nfunction Weather({\n  currentWeather,\n  fetchCurrentWeather\n}) {\n  const [city, setCity] = useState(1);\n  useEffect(() => {\n    fetchCurrentWeather();\n  }, []);\n  return currentWeather.loading ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 6\n    }\n  }, \"Loading...\") : currentWeather.error ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 6\n    }\n  }, currentWeather.error) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, currentWeather && currentWeather.title);\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentWeather: state.currentWeather\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCurrentWeather: () => dispatch(fetchCurrentWeather())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather);","map":{"version":3,"sources":["/Users/kyawohnmarsoe/Downloads/weather-widget/src/features/weather/Weather.js"],"names":["React","useState","useEffect","connect","fetchCurrentWeather","Weather","currentWeather","city","setCity","loading","error","title","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,mBAAR,QAAkC,kBAAlC;;AAEA,SAASC,OAAT,CAAiB;AAACC,EAAAA,cAAD;AAAgBF,EAAAA;AAAhB,CAAjB,EAAuD;AACnD,QAAM,CAACG,IAAD,EAAMC,OAAN,IAAiBP,QAAQ,CAAC,CAAD,CAA/B;AACAC,EAAAA,SAAS,CAAC,MAAI;AACVE,IAAAA,mBAAmB;AACtB,GAFQ,EAEP,EAFO,CAAT;AAGA,SAAOE,cAAc,CAACG,OAAf,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADM,GAEPH,cAAc,CAACI,KAAf,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,cAAc,CAACI,KAApB,CADD,gBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEMJ,cAAc,IACdA,cAAc,CAACK,KAHrB,CAJF;AAUH;;AAED,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHP,IAAAA,cAAc,EAAGO,KAAK,CAACP;AADpB,GAAP;AAGH,CAJD;;AAMA,MAAMQ,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHX,IAAAA,mBAAmB,EAAG,MAAMW,QAAQ,CAACX,mBAAmB,EAApB;AADjC,GAAP;AAGH,CAJD;;AAMA,eAAeD,OAAO,CAClBS,eADkB,EAElBE,kBAFkB,CAAP,CAGZT,OAHY,CAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {fetchCurrentWeather} from './weatherActions'\n\nfunction Weather({currentWeather,fetchCurrentWeather}) {\n    const [city,setCity] = useState(1)\n    useEffect(()=>{\n        fetchCurrentWeather()\n    },[])\n    return currentWeather.loading ? \n    (<h2>Loading...</h2>) :\n    currentWeather.error ?\n    (<h2>{currentWeather.error}</h2>) :\n    ( <div>\n        {\n            currentWeather &&\n            currentWeather.title\n        }\n    </div>)\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentWeather : state.currentWeather\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchCurrentWeather : () => dispatch(fetchCurrentWeather())\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n) (Weather)\n"]},"metadata":{},"sourceType":"module"}