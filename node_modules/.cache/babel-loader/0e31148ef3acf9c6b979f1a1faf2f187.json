{"ast":null,"code":"var _jsxFileName = \"/Users/kyawohnmarsoe/Downloads/weather-widget/src/features/weather/Weather.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Axios from 'axios';\nimport { changeCity, CurrentWeatherData, CurrentWeatherError } from './weatherSlice';\nimport styles from \"./Weather.module.css\";\n\nfunction Weather() {\n  const currentCity = useSelector(state => state.weather.currentCity);\n  const currentData = useSelector(state => state.weather.currentData);\n  const error = useSelector(state => state.weather.error);\n  const dispatch = useDispatch();\n  const API_KEY = \"567fb009055f8d8fddf69948130c088f\";\n\n  const getCurrentWeather = city => {\n    // Axios.get(`http://jsonplaceholder.typicode.com/posts/${city}`)\n    Axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`).then(response => {\n      // console.log(response.data)\n      dispatch(CurrentWeatherData(response.data));\n    }).catch(error => {\n      console.log(error.message);\n      dispatch(CurrentWeatherError(error.message));\n    });\n  };\n\n  useEffect(() => {\n    getCurrentWeather(currentCity);\n  }, [currentCity]);\n  const [newCity, setNewCity] = useState('Singapore');\n  console.log(currentData);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Open Weather\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newCity,\n    onChange: e => setNewCity(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    \"aria-label\": \"Search By City\",\n    onClick: () => dispatch(changeCity(newCity)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Search\"), error && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 26\n    }\n  }, error), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, currentCity), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, currentData ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, currentData.title) : null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Clouds\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"30 C\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Wind : \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 28\n    }\n  }), \"Sunrise : \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 31\n    }\n  }), \"Sunset : \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 30\n    }\n  }))));\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/kyawohnmarsoe/Downloads/weather-widget/src/features/weather/Weather.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Axios","changeCity","CurrentWeatherData","CurrentWeatherError","styles","Weather","currentCity","state","weather","currentData","error","dispatch","API_KEY","getCurrentWeather","city","get","then","response","data","catch","console","log","message","newCity","setNewCity","e","target","value","row","title"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Axios from 'axios'\nimport {\n    changeCity,\n    CurrentWeatherData,\n    CurrentWeatherError\n} from './weatherSlice'\nimport styles from \"./Weather.module.css\";\n\n\nfunction Weather() {\n    const currentCity = useSelector(state => state.weather.currentCity);\n    const currentData = useSelector(state => state.weather.currentData);\n    const error = useSelector(state => state.weather.error);\n    const dispatch = useDispatch()\n    const API_KEY = \"567fb009055f8d8fddf69948130c088f\"\n    const getCurrentWeather = (city) =>{\n        // Axios.get(`http://jsonplaceholder.typicode.com/posts/${city}`)\n        Axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`)\n        \n        .then(response=>{\n            // console.log(response.data)\n            dispatch(CurrentWeatherData(response.data))\n        })\n        .catch(error=>{\n            console.log(error.message)\n            dispatch(CurrentWeatherError(error.message))\n        })\n    }\n\n    useEffect(()=>{\n        getCurrentWeather(currentCity)\n    },[currentCity])\n\n    const [newCity,setNewCity] = useState('Singapore')\n    console.log(currentData)\n    return (\n        <div>\n            <h1>Open Weather</h1>\n\n            <input type=\"text\"\n            value={newCity}\n            onChange={e=>setNewCity(e.target.value)}\n            />\n\n            <button \n            aria-label=\"Search By City\"\n            onClick= { () => dispatch(changeCity(newCity)) } >\n            Search</button>\n\n            {\n                error && <h2>{error}</h2>\n            }\n\n            <h4>{currentCity}</h4>\n\n            <div className={styles.row}>\n            {\n                currentData ?\n                <h2>{currentData.title}</h2> \n                : null\n            }\n\n           \n                <h3>Clouds</h3> \n                <h3>30 C</h3> \n                <div>\n                    Wind : <br/>\n                    Sunrise : <br/>\n                    Sunset : <br/>\n                </div> \n            \n            </div>\n            \n            \n          \n        </div>\n    )\n}\n\nexport default Weather\n"]},"metadata":{},"sourceType":"module"}