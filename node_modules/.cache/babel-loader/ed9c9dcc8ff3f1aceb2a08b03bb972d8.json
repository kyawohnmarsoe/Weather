{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kyawohnmarsoe/Downloads/weather-widget/src/features/weather/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Axios from 'axios';\nimport { changeCity, CurrentWeatherData, CurrentWeatherError, ForecastWeatherData, ForecastWeatherError } from './weatherSlice';\nimport styles from \"./Weather.module.css\";\nimport moment from 'moment';\n\nfunction Weather() {\n  _s();\n\n  const currentCity = useSelector(state => state.weather.currentCity);\n  const currentData = useSelector(state => state.weather.currentData);\n  const forecastData = useSelector(state => state.weather.forecastData);\n  const error = useSelector(state => state.weather.error);\n  const dispatch = useDispatch();\n  const API_KEY = \"567fb009055f8d8fddf69948130c088f\"; // Current \n\n  const getCurrentWeather = city => {\n    Axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`).then(response => {\n      dispatch(CurrentWeatherData(response.data));\n      getForecastWeather(response.data.coord.lat, response.data.coord.lon);\n    }).catch(error => {\n      dispatch(CurrentWeatherError(\"City Not Found!\"));\n    });\n  }; // Forecast \n\n\n  const getForecastWeather = (lat, lon) => {\n    Axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&exclude=hourly,current&appid=${API_KEY}`).then(response => {\n      // console.log(response.data)\n      dispatch(ForecastWeatherData(response.data));\n    }).catch(error => {\n      // console.log(error.message)\n      dispatch(ForecastWeatherError(\"City Not Found!\"));\n    });\n  };\n\n  useEffect(() => {\n    getCurrentWeather(currentCity);\n  }, [currentCity]);\n  const [newCity, setNewCity] = useState('Singapore');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Open Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newCity,\n      onChange: e => setNewCity(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      \"aria-label\": \"Search By City\",\n      onClick: () => dispatch(changeCity(newCity)),\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 26\n    }, this), currentData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.weatherBox,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.cityname,\n        children: currentCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.row,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://openweathermap.org/img/wn/${currentData.weather[0].icon}.png`,\n            alt: \"Weather Icon\",\n            className: styles.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.description,\n            children: currentData.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.temperature,\n          children: [currentData.main.temp, \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.windBox,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Wind:\", currentData.wind.speed, \" m/s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Sunrise: \", moment(currentData.sys.sunrise * 1000).format('LT'), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Sunset:\", moment(currentData.sys.sunset * 1000).format('LT'), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.row,\n        children: forecastData.daily.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: moment(data.td * 1000).format('dddd')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://openweathermap.org/img/wn/${data.weather.icon}.png`,\n            alt: \"Weather Icon\",\n            className: styles.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [data.temp.eve, \" \\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Weather, \"oLIfBh5fYG4h5AJ8Air9TymOEDc=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/kyawohnmarsoe/Downloads/weather-widget/src/features/weather/Weather.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Axios","changeCity","CurrentWeatherData","CurrentWeatherError","ForecastWeatherData","ForecastWeatherError","styles","moment","Weather","currentCity","state","weather","currentData","forecastData","error","dispatch","API_KEY","getCurrentWeather","city","get","then","response","data","getForecastWeather","coord","lat","lon","catch","newCity","setNewCity","e","target","value","weatherBox","cityname","row","icon","description","temperature","main","temp","windBox","wind","speed","sys","sunrise","format","sunset","daily","map","td","eve"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\nimport { useSelector, useDispatch } from \"react-redux\"\nimport Axios from 'axios'\nimport {\n    changeCity,\n    CurrentWeatherData,\n    CurrentWeatherError,\n    ForecastWeatherData,\n    ForecastWeatherError\n} from './weatherSlice'\nimport styles from \"./Weather.module.css\"\nimport moment from 'moment'\n\n\nfunction Weather() {\n    const currentCity = useSelector(state => state.weather.currentCity);\n    const currentData = useSelector(state => state.weather.currentData);\n    const forecastData = useSelector(state => state.weather.forecastData);\n    const error = useSelector(state => state.weather.error);\n    const dispatch = useDispatch()\n    const API_KEY = \"567fb009055f8d8fddf69948130c088f\"\n    // Current \n    const getCurrentWeather = (city) =>{\n        Axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`)\n        \n        .then(response=>{\n            dispatch(CurrentWeatherData(response.data))\n            getForecastWeather(response.data.coord.lat,response.data.coord.lon)\n        })\n        .catch(error=>{\n            dispatch(CurrentWeatherError(\"City Not Found!\"))\n        })\n    }\n     // Forecast \n    const getForecastWeather = (lat,lon) =>{\n        Axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=metric&exclude=hourly,current&appid=${API_KEY}`)\n        \n        .then(response=>{\n            // console.log(response.data)\n            dispatch(ForecastWeatherData(response.data))\n        })\n        .catch(error=>{\n            // console.log(error.message)\n            dispatch(ForecastWeatherError(\"City Not Found!\"))\n        })\n    }\n    useEffect(()=>{\n        getCurrentWeather(currentCity)\n    },[currentCity])\n\n    const [newCity,setNewCity] = useState('Singapore')\n   \n    return (\n        <div >\n            <h1>Open Weather</h1>\n\n            <input type=\"text\"\n            value={newCity}\n            onChange={e=>setNewCity(e.target.value)}\n            />\n\n            <button \n            aria-label=\"Search By City\"\n            onClick= { () => dispatch(changeCity(newCity)) } >\n            Search</button>\n\n            {\n                error && <h2>{error}</h2>\n            }\n\n            {\n                currentData &&\n                <div className={styles.weatherBox}>\n                    <span className={styles.cityname}>{currentCity}</span>\n                    <div className={styles.row}>\n                        <div>\n                            <img src={`http://openweathermap.org/img/wn/${currentData.weather[0].icon}.png`} alt=\"Weather Icon\" className={styles.icon}/>\n                            <span className={styles.description}>{currentData.weather[0].description}</span>\n                        </div>\n                        \n                        <span className={styles.temperature}>{currentData.main.temp} °C</span>\n                        <div className={styles.windBox}>\n                            <span>Wind:{currentData.wind.speed} m/s</span> \n                            <span>Sunrise: {moment(currentData.sys.sunrise * 1000).format('LT')} </span> \n                            <span>Sunset:{moment(currentData.sys.sunset * 1000).format('LT')} </span> \n                        </div>\n                    </div>\n                    <div className={styles.row}>\n                        {\n                            forecastData.daily.map(data => (\n                                <div>\n                                    <span>{moment(data.td * 1000).format('dddd')}</span>\n                                    <img src={`http://openweathermap.org/img/wn/${data.weather.icon}.png`} alt=\"Weather Icon\"  className={styles.icon}/>\n                                    <span >{data.temp.eve} °C</span>\n                                </div>\n                            ) )\n                            \n                        }\n                        \n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default Weather\n"]},"metadata":{},"sourceType":"module"}